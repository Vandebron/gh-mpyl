---
$schema: https://json-schema.org/draft/2020-12/schema#
$ref: '#/definitions/Config'
definitions:
  Config:
    type: object
    properties:
      mpylVersion:
        description: >-
          The MINIMAL version of MPyL that should be used to build this project. If not
          specified, the latest version will be used.
        type: string
      vcs:
        $ref: '#/definitions/VCS'
      docker:
        $ref: '#/definitions/Docker'
      dagster:
        $ref: '#/definitions/Dagster'
      whiteLists:
        $ref: '#/definitions/Whitelists'
      kubernetes:
        $ref: '#/definitions/Kubernetes'
      project:
        $ref: '#/definitions/Project'
      camunda:
        $ref: '#/definitions/Camunda'
    required:
      - vcs
      - docker
    title: MPyL global configuration
  Whitelists:
    type: object
    required:
      - default
      - addresses
    properties:
      default:
        description: Default whitelist for all environments
        type: array
        items:
          minItems: 1
          type: string
      addresses:
        type: array
        minItems: 1
        items:
          type: object
          additionalProperties: false
          required:
            - name
          oneOf:
            - required:
                - pr
                - test
                - acceptance
                - production
            - required:
                - all
          properties:
            name:
              type: string
            pr:
              type: array
              items:
                minItems: 1
                type: string
            test:
              type: array
              items:
                minItems: 1
                type: string
            acceptance:
              type: array
              items:
                minItems: 1
                type: string
            production:
              type: array
              items:
                minItems: 1
                type: string
            all:
              type: array
              items:
                minItems: 1
                type: string
  Kubernetes:
    type: object
    required:
      - defaultCluster
      - clusters
      - deploymentStrategy
    properties:
      deploymentStrategy:
        $ref: k8s_api_core.schema.yml#/definitions/io.k8s.api.apps.v1.DeploymentStrategy
      outputPath:
        type: string
        default: .mpyl/kubernetes
        description: >-
          The path to the folder where the rendered helm chart or kubectl manifest will be written.
          Defaults to target/kubernetes under the root folder of the project.
      defaultCluster:
        type: object
        description: Default cluster to deploy to. Can be overridden in the project.yaml
        properties:
          test:
            type: string
          acceptance:
            type: string
          production:
            type: string
      clusters:
        type: array
        items:
          $ref: '#/definitions/NamedCluster'
  Clusters:
    type: object
    additionalProperties: false
    properties:
      test:
        $ref: '#/definitions/Cluster'
      acceptance:
        $ref: '#/definitions/Cluster'
      production:
        $ref: '#/definitions/Cluster'
  NamedCluster:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      clusterId:
        type: string
        description: Rancher specific cluster ID
      projectId:
        type: string
        description: Rancher specific project ID
      clusterEnv:
        type: string
      context:
        type: string
    required: [name, clusterEnv, context]
  Cluster:
    type: object
    additionalProperties: false
    properties:
      clusterId:
        type: string
      clusterEnv:
        type: string
      context:
        type: string
    required: [clusterId, clusterEnv, context]
  VCS:
    type: object
    properties:
      changedFilesPath:
        type: [string, null]
        description: Path to the file that contains the changed files
    title: VCS
  Docker:
    type: object
    additionalProperties: false
    properties:
      defaultRegistry:
        type: string
      registries:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Registry'
      build:
        $ref: '#/definitions/Build'
      compose:
        type: object
        properties:
          periodSeconds:
            description: Polling interval for checking if containers are up
            type: integer
            default: 2
          failureThreshold:
            description: Maximum number of times to poll before considering 'docker-compose up' failed
            type: integer
            default: 20
        required: [periodSeconds, failureThreshold]
    required:
      - registries
      - defaultRegistry
    title: Docker
  Build:
    type: object
    additionalProperties: false
    properties:
      rootFolder:
        type: string
      buildTarget:
        description: The target in the multi-stage docker file to build in the 'build' stage
        type: string
      testTarget:
        description: The target in the multi-stage docker file to build in the 'test' stage
        type: string
      dockerFileName:
        type: string
    required: [rootFolder, buildTarget, dockerFileName]
  Registry:
    type: object
    additionalProperties: false
    properties:
      hostName:
        type: [string, null]
      organization:
        type: [string, null]
      userName:
        type: string
      password:
        type: string
      provider:
        enum:
          - aws
          - azure
          - docker
        description: >-
          Defines the container registry provider. Defaults to aws.
        default: aws
      region:
        type: string
      cache:
        type: object
        additionalProperties: false
        properties:
          cacheFromRegistry:
            description: Whether to cache from the registry. When true, the to and from properties are ignored.
            type: boolean
            default: false
          custom:
            type: object
            additionalProperties: false
            properties:
              to:
                description: The --cache-to argument for docker buildx
                type: string
              from:
                description: The --cache-from argument for docker buildx
                type: string
    required:
      - hostName
      - password
      - userName
    title: Registry
  Project:
    type: object
    additionalProperties: false
    required:
      - allowedMaintainers
      - deployment
    properties:
      allowedMaintainers:
        type: array
        items:
          type: string
      deployment:
        type: object
        additionalProperties: false
        properties:
          traefik:
            $ref: project.schema.yml#/definitions/traefik
          additionalTraefikRoutes:
            $ref: '#/definitions/AdditionalTraefikRoutes'
          traefikDefaults:
            $ref: '#/definitions/TraefikDefaults'
          kubernetes:
            $ref: project.schema.yml#/definitions/kubernetes
  AdditionalTraefikRoutes:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        clusterEnv:
          $ref: project.schema.yml#/definitions/dtapValue
        middlewares:
          type: array
          items:
            type: string
        entrypoints:
          type: array
          items:
            type: string
  TraefikDefaults:
    type: object
    additionalProperties: false
    properties:
      httpMiddleware:
        type: string
      tls:
        type: string
    required: [httpMiddleware, tls]
  Camunda:
    type: object
    properties:
      modelerAPI:
        type: object
        properties:
          baseUrl:
            type: string
          tokenUrl:
            type: string
        required: [baseUrl, tokenUrl]
      modelerCredentials:
        type: object
        properties:
          clientId:
            type: string
          clientSecret:
            type: string
          grantType:
            type: string
          audience:
            type: string
        required: [clientId, clientSecret, grantType, audience]
      zeebeCredentials:
        type: object
        properties:
          pr:
            $ref: '#/definitions/CamundaCluster'
          test:
            $ref: '#/definitions/CamundaCluster'
          acceptance:
            $ref: '#/definitions/CamundaCluster'
          production:
            $ref: '#/definitions/CamundaCluster'
        required: [pr, test, acceptance, production]
      camundaDeploymentPath:
        type: object
        properties:
          diagramResourcesPath:
            type: string
          dockerDirectoryPath:
            type: string
          dockerFilePath:
            type: string
          bpmProjectPath:
            type: string
        required: [diagramResourcesPath, dockerDirectoryPath, dockerFilePath, bpmProjectPath]
    required:
      - modelerAPI
      - modelerCredentials
      - zeebeCredentials
      - camundaDeploymentPath
  CamundaCluster:
    type: object
    properties:
      clusterId:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
  Dagster:
    title: Dagster
    type: object
    additionalProperties: false
    properties:
      baseNamespace:
        description: Namespace that contains dagster instances
        type: string
      workspaceConfigMap:
        description: Configmap that contains the dagster workspace configuration
        type: string
      workspaceFileKey:
        description: Key of the workspaceConfigMap entry that contains the list of servers that are hosted on the dagster instance
        type: string
      daemon:
        description: Name of the kubernetes instance that runs the dagster daemon
        type: string
      webserver:
        description: Name of the kubernetes instance that runs the dagster web UI, default
        type: string
      globalServiceAccountOverride:
        description: Name of an (external) serviceAccount that will be assigned to a dagster user-deployment in favor of creating a new one
        type: string
