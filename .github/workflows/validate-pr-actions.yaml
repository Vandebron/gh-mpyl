---
name: Validate Github Actions

on:
  workflow_call:
    inputs:
      image:
        type: string
        required: false
  pull_request:
    paths:
      - actions/**

# If multiple commits are pushed simultaneously, only build the last one.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:

  health-check:
    name: ▶️ Run actions/health-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Point action.yaml to a new version
        if: inputs.image != ''
        env:
          IMAGE: docker://${{ inputs.image }}
        run: yq -i '.runs.image = strenv(IMAGE)' actions/health-check/action.yaml

      - uses: ./actions/health-check
        with:
          config-path: tests/test_resources/mpyl_config.yml

  lint-projects:
    name: ▶️ Run actions/lint-projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Point action.yaml to a new version
        if: inputs.image != ''
        env:
          IMAGE: docker://${{ inputs.image }}
        run: yq -i '.runs.image = strenv(IMAGE)' actions/lint-projects/action.yaml

      - uses: ./actions/lint-projects
        with:
          config-path: tests/test_resources/mpyl_config.yml

  run-plan:
    name: ▶️ Run actions/run-plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Point action.yaml to a new version
        if: inputs.image != ''
        env:
          IMAGE: docker://${{ inputs.image }}
        run: yq -i '.runs.image = strenv(IMAGE)' actions/run-plan/action.yaml

      - uses: ./actions/run-plan
        with:
          environment: pull-request
          deploy-target: PullRequest
          version: a-random-version
          changed-files-path: FIXME-add-this-file-to-test-resources.json  # FIXME
          config-path: tests/test_resources/mpyl_config.yml

  run-stage:
    name: ▶️ Run actions/run-stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Point action.yaml to a new version
        if: inputs.image != ''
        env:
          IMAGE: docker://${{ inputs.image }}
        run: yq -i '.runs.image = strenv(IMAGE)' actions/run-stage/action.yaml

      - uses: ./actions/run-stage
        with:
          project: minimalService
          stage: deploy
          environment: pull-request
          deploy-target: PullRequest
          version: a-random-version
          config-path: tests/test_resources/mpyl_config.yml
