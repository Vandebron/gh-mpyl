---
name: Validate Docker image

on:
  pull_request:
    paths:
      - Dockerfile
      - entrypoint.sh
      - requirements.txt
      - src/**

# If multiple commits are pushed simultaneously, only build the last one.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  release:
    name: üê≥ Build & publish Docker image
    runs-on: ubuntu-latest
    env:
      image-name: gh-mpyl
      image-version: pr-${{ github.event.pull_request.number }}
    outputs:
      image: ${{ steps.login-ecr-public.outputs.registry }}/vdb-public/${{ env.image-name }}:${{ env.image-version }}
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2.0.1
        with:
          registry-type: public

      - name: Create repository in ECR
        uses: int128/create-ecr-repository-action@v1.319.0
        with:
          repository: ${{ env.image-name }}
          public: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Build and push
        id: docker-build-push
        uses: docker/build-push-action@v6.9.0
        with:
          file: Dockerfile
          context: .
          tags: ${{ steps.login-ecr-public.outputs.registry }}/${{ vars.AWS_ECR_PUBLIC_ALIAS }}/${{ env.image-name }}:${{ env.image-version }}
          platforms: |-
            linux/amd64
            linux/arm64
          provenance: false
          push: true

  run:
    name: ‚ñ∂Ô∏è Run actions
    needs: release
    uses: ./.github/workflows/validate-pr-actions.yaml
    with:
      image: ${{ needs.release.outputs.image }}
